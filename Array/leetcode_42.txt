解法一 dp
从左边遍历第一次记录当前位置左边的最大值
从右边遍历第二次记录当前位置右边的最大值，并与左边最大值比较取较小的那个
	较小的那个将成为盛水的上限
在第二次遍历过程中，如果当前位置高度低于dp中记录的高度，说明当前位置处于水位下
	则计算当前位置高度与当前槽内dp中记录的高度的差值，即为当前坐标的水量

解法二
l,r两个指针分别从两头开始扫描
找出当前两指针中高度较低的那个，并向其终点方向扫描
若遇到的值比当前窗口的值小，说明该位置在水面下
	累计当前窗口与该位置高度的差值
若遇到的值比当前窗口的值大或相等，说明该位置在水位上，需重新确定窗口位置
重复直到两指针相遇

解法三
遍历数组，当栈为空或者栈顶大于当前高度时，把当前栈的坐标压入栈顶（此时栈内元素应为降序）
如果栈顶小于当前高度并且栈内有至少两个元素，说明有坑，当前高度为右边界
	取出栈顶元素后，当前栈顶元素即为左边界，取左右边界较小值
	当前坑的盛水量为 被取出元素与边界高度差 乘 坐标差
	（如果此后栈不为空，又遇到比栈顶高的元素，以上步骤依然正确
	此时计算只会叠加多出的水量，不会重复计算）
	遍历只在push时前进，pop直到当前高度小于栈顶元素，此时压入栈顶元素
	如果当前高度超过之前的最高高度，栈为空,需要特殊处理
	通过每次pop之后检查栈是否为空以保证栈内至少有两个元素
	重复直到遍历完整个数组