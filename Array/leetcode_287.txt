解法一：二分法查找
把数组中的数而非数组下标作为key进行二分法查找
把当前查找范围的最大值和最小值和的一半作为中点
然后遍历整个数组，统计小于mid的数的个数
如果个数大于mid，说明重复数比mid大, left = mid + 1
否则重复数比mid小，right = mid

解法二：
http://bookshadow.com/weblog/2015/09/28/leetcode-find-duplicate-number/

解法三：
遍历32位整数的每一位
由于0到n-1的数字中每一位的1的个数都是固定的
cnt1统计0到n-1中该位上1的个数
同时cnt2统计数组中所有数中该位上1的个数
如果统计结果cnt2 > cnt1说明当前位数为重复数字
则将当前位数加入结果，遍历结束结果之和即为重复数